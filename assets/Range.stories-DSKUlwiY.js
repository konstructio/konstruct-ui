import{j as e}from"./jsx-runtime-DR9Q75dM.js";import{r as s}from"./index-DRjF_FHU.js";import{R,T as N,a as T,b as u}from"./index-D-pZHcF0.js";import{c as S}from"./index-Ch1LPoRI.js";import{c as o}from"./index-Bb4qSo10.js";import{u as q}from"./theme.hook-CuwzjDGP.js";import"./index-BZUySh2a.js";import"./index-CaQnC5nY.js";import"./index-BCDNznYw.js";import"./index-0pbq26Ko.js";import"./index-rX-Bn4lm.js";import"./index-DqxYUgyH.js";const C=o(["relative","flex","items-center","w-full","border","border-gray-200","rounded-full","shadow-sm"],{variants:{theme:{kubefirst:"",konstruct:"",colony:""}},defaultVariants:{theme:"kubefirst"}}),P=o(["absolute","h-full"],{variants:{theme:{kubefirst:["bg-kubefirst-purple-dark"],konstruct:["bg-orange-500"],colony:["bg-red-500"]}},defaultVariants:{theme:"kubefirst"}}),B=o(["relative","flex-grow","bg-gray-100","rounded-full"],{variants:{theme:{kubefirst:"",konstruct:"",colony:""},size:{sm:["h-1"],md:["h-2"],lg:["h-3"]}},defaultVariants:{theme:"kubefirst",size:"md"}}),d=o(["block","w-5","h-5","rounded-full","cursor-pointer","focus-visible:outline-none","shadow-md","bg-white","border","border-gray-300"],{variants:{theme:{kubefirst:"",konstruct:"",colony:""},size:{sm:["w-5","h-5"],md:["w-6","h-6"],lg:["w-7","h-7"]}},defaultVariants:{theme:"kubefirst",size:"md"}}),l=s.forwardRef(({label:a,defaultValue:p=[0,100],name:g,theme:x,size:m,showValue:b,...w},v)=>{const t=s.useRef(null),[r,V]=s.useState(p),{theme:y}=q(),n=x??y;s.useImperativeHandle(v,()=>t.current,[t]),s.useEffect(()=>{t.current&&(t.current.value=`[${r.toString()}]`)},[r]);const k=s.useCallback(j=>V(j),[]);return e.jsxs("div",{className:"w-full relative flex flex-col gap-3",children:[e.jsxs("div",{className:S("flex items-center",a?"justify-between":"justify-end"),children:[a?e.jsx("label",{children:a}):null,b?e.jsxs("span",{className:"text-xs",children:[r[0]," - ",r[1]]}):null]}),e.jsx("input",{ref:t,name:g,className:"hidden",type:"text"}),e.jsxs(R,{value:r,className:C({theme:n}),onValueChange:k,...w,children:[e.jsx(N,{className:B({theme:n,size:m}),children:e.jsx(T,{className:P({theme:n})})}),e.jsx(u,{className:d({theme:n,size:m})}),e.jsx(u,{className:d({theme:n,size:m})})]})]})});l.__docgenInfo={description:"",methods:[],displayName:"Range",props:{className:{required:!1,tsType:{name:"string"},description:""},defaultValue:{required:!1,tsType:{name:"SliderPropsBase['defaultValue']",raw:"SliderPropsBase['defaultValue']"},description:"",defaultValue:{value:"[0, 100]",computed:!1}},label:{required:!1,tsType:{name:"string"},description:""},max:{required:!1,tsType:{name:"SliderPropsBase['max']",raw:"SliderPropsBase['max']"},description:""},min:{required:!1,tsType:{name:"SliderPropsBase['min']",raw:"SliderPropsBase['min']"},description:""},name:{required:!1,tsType:{name:"string"},description:""},showValue:{required:!1,tsType:{name:"boolean"},description:""},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:""}},composes:["VariantProps"]};const J={component:l},i={args:{min:0,max:100,showValue:!0},render:a=>e.jsxs("div",{className:"max-w-[350px]",children:[e.jsx(l,{theme:"kubefirst",label:"Range with Kubefirst theme",defaultValue:[10,77],...a}),e.jsx("div",{className:"mt-10"}),e.jsx(l,{theme:"konstruct",label:"Range with Konstruct theme",defaultValue:[25,97],...a}),e.jsx("div",{className:"mt-10"}),e.jsx(l,{theme:"colony",label:"Range with Colony theme",defaultValue:[0,50],...a})]})};var c,f,h;i.parameters={...i.parameters,docs:{...(c=i.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    min: 0,
    max: 100,
    showValue: true
  },
  render: args => <div className="max-w-[350px]">
      <RangeComponent theme="kubefirst" label="Range with Kubefirst theme" defaultValue={[10, 77]} {...args} />

      <div className="mt-10" />

      <RangeComponent theme="konstruct" label="Range with Konstruct theme" defaultValue={[25, 97]} {...args} />

      <div className="mt-10" />

      <RangeComponent theme="colony" label="Range with Colony theme" defaultValue={[0, 50]} {...args} />
    </div>
}`,...(h=(f=i.parameters)==null?void 0:f.docs)==null?void 0:h.source}}};const L=["Range"];export{i as Range,L as __namedExportsOrder,J as default};
