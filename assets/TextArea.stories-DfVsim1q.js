import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as l}from"./index-DUAV1Q2A.js";import{u as b}from"./theme.hook-gog7kSAh.js";import{c as y}from"./index-BVvdOpju.js";import{a as v}from"./index-Bj7X0qp-.js";const w=v(["border","border-gray-200","disabled:cursor-not-allowed","disabled:opacity-50","focus-visible:outline-none","focus-visible:ring-1","focus-visible:ring-ring","p-2","placeholder:text-gray-300","resize-none","rounded-md","shadow-sm","w-full"],{variants:{theme:{colony:"focus:ring-red-700",kubefirst:"focus:ring-kubefirst-primary",civo:""}},defaultVariants:{theme:"kubefirst"}}),s=l.forwardRef(({initialValue:r,label:t,name:p,placeholder:u,rows:x=3,theme:f,className:h,...o},g)=>{const i=l.useId(),{theme:T}=b(),n=p?`${i}-name`:i;return e.jsxs("div",{className:"flex flex-col gap-2",children:[t?e.jsx("label",{htmlFor:n,className:"cursor-pointer",children:t}):null,e.jsx("textarea",{id:n,ref:g,className:y(w({className:h,theme:f??T})),rows:x,placeholder:u,value:r??o.value,...o})]})});s.__docgenInfo={description:"",methods:[],displayName:"TextArea",props:{rows:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"3",computed:!1}},label:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:""},name:{required:!1,tsType:{name:"string"},description:""},initialValue:{required:!1,tsType:{name:"string"},description:""}},composes:["InputHTMLAttributes","VariantProps"]};const V={title:"In Review/TextArea",component:s},a={args:{placeholder:"Type your message here."},render:r=>e.jsxs("div",{className:"w-[350px] flex flex-col gap-3",children:[e.jsx(s,{...r,label:"This is a textarea with Kubefirst theme"}),e.jsx(s,{...r,theme:"colony",label:"This is a textarea with Colony theme"})]})};var m,c,d;a.parameters={...a.parameters,docs:{...(m=a.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    placeholder: 'Type your message here.'
  },
  render: args => <div className="w-[350px] flex flex-col gap-3">
      <TextAreaComponent {...args} label="This is a textarea with Kubefirst theme" />
      <TextAreaComponent {...args} theme="colony" label="This is a textarea with Colony theme" />
    </div>
}`,...(d=(c=a.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};const q=["TextArea"];export{a as TextArea,q as __namedExportsOrder,V as default};
